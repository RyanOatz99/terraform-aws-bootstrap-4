locals {
  is_root = var.parent == null
  name = "${local.is_root ? var.name : "${var.parent.name}-${var.name}"}${var.environment != null ? "-${var.environment}" : ""}"
  root_path = "${path.root}/${local.name}"
  domain = var.domain == null ? "${var.environment != null ? "${var.environment}." : ""}${var.name}.${var.parent.domain}" : var.domain
  crosslinked_sections = [
    for name, config in var.sections : name if config.crosslinked
  ]
}

// configure global config file for the root account
resource "local_file" "global_config" {
  count                = local.is_root ? 1 : 0
  filename             = "${path.root}/${local.name}/globals.yml"
  file_permission      = "0644"
  directory_permission = "0755"
  content = <<-EOF
    name: ${local.name}
    domain: ${local.domain}
  EOF
}

// configure accounts to hold state for all accounts if this is a root module
resource "local_file" "accounts_config" {
  count                = local.is_root ? 1 : 0
  filename             = "${path.root}/${local.name}/subaccounts/config.tf"
  file_permission      = "0644"
  directory_permission = "0755"
  content = <<-EOF
    ${templatefile("${path.module}/templates/provider.tmpl.tf", {
      profile = local.name
      region  = var.region
      alias   = null
    })}

    ${templatefile("${path.module}/templates/backend.tmpl.tf", {
      profile   = local.name
      region    = var.region
      bucket    = local.name
      statefile = "accounts"
    })}

    ${templatefile("${path.module}/templates/roleswitch.tmpl.tf", {
      DOLLAR = "$"
      name   = local.name
    })}
  EOF
}

// configure crosslink to hold state for all accounts if this is a root module
resource "local_file" "crosslink_config" {
  count                = local.is_root ? 1 : 0
  filename             = "${path.root}/${local.name}/crosslink/config.tf"
  file_permission      = "0644"
  directory_permission = "0755"
  content = <<-EOF
    ${templatefile("${path.module}/templates/provider.tmpl.tf", {
      profile = local.name
      region  = var.region
      alias   = null
    })}

    ${templatefile("${path.module}/templates/backend.tmpl.tf", {
      profile   = local.name
      region    = var.region
      bucket    = local.name
      statefile = "crosslink"
    })}
  EOF
}

// configure subaccount under parent account
resource "local_file" "account" {
  count                = local.is_root ? 0 : 1
  filename             = "${path.root}/${var.parent.name}/subaccounts/${local.name}.tf"
  file_permission      = "0644"
  directory_permission = "0755"
  content = <<-EOF
     ${templatefile("${path.module}/templates/account.tmpl.tf", {
      name = local.name
      email = var.email
      dollar = "$"
    })}
  EOF
}

// configure bootstrap file to create per-account s3 bucket/domain/etc
resource "local_file" "bootstrap" {
  filename             = "${local.root_path}/bootstrap.tf"
  file_permission      = "0644"
  directory_permission = "0755"
  content = <<-EOF
    ${templatefile("${path.module}/templates/provider.tmpl.tf", {
      profile = local.name
      region  = var.region
      alias   = null
    })}

    ${templatefile("${path.module}/templates/bucket.tmpl.tf", {
      name = local.name
    })}

    ${templatefile("${path.module}/templates/backend.tmpl.tf", {
      profile   = local.is_root ? var.name : var.parent.name
      region    = local.is_root ? var.region : var.parent.region
      bucket    = local.is_root ? var.name : var.parent.name
      statefile = local.name
    })}
  EOF
}

// configure each section in the account
resource "local_file" "section_configs" {
  for_each             = local.is_root ? {} : var.sections
  filename             = "${local.root_path}/${each.key}/config.tf"
  file_permission      = "0644"
  directory_permission = "0755"
  content = <<-EOF
    # GENERATED BY TERRAFORM, DO NOT EDIT
    ${templatefile("${path.module}/templates/provider.tmpl.tf", {
      profile = local.name
      region  = var.region
      alias   = null
    })}

    ${templatefile("${path.module}/templates/locals.tmpl.tf", {
      name        = var.name
      domain      = var.domain
      region      = var.region
      environment = var.environment
      org         = var.parent.name
      imports     = each.value.imports
    })}
    %{for state in each.value.remote_states}
    ${templatefile("${path.module}/templates/remote-state.tmpl.tf", {
      profile   = local.name
      region    = var.region
      bucket    = local.name
      statefile = state
      key       = state
    })}
    %{endfor~}

    ${templatefile("${path.module}/templates/backend.tmpl.tf", {
      profile   = local.name
      region    = var.region
      bucket    = local.name
      statefile = each.key
    })}
  EOF
}

// load remote states into crosslink layer for all relevant sections
resource "local_file" "crosslink_sections" {
  count                = length(local.crosslinked_sections)
  filename             = "${path.root}/${var.parent.name}/crosslink/${local.name}.tf"
  file_permission      = "0644"
  directory_permission = "0755"
  content = <<-EOF
    # GENERATED BY TERRAFORM, DO NOT EDIT
    %{for section in local.crosslinked_sections}
    ${templatefile("${path.module}/templates/remote-state.tmpl.tf", {
      profile   = local.name
      region    = var.region
      bucket    = local.name
      statefile = section
      key       = "${local.name}-${section}"
    })}
    %{endfor~}
  EOF
}

